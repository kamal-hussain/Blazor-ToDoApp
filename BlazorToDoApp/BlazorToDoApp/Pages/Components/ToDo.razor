@page "/todo"

@using BlazorToDoApp.Data.Models;

<h3>@HeaderName</h3>
<!--eDIT form-->
<EditForm Model="@task" class="form-inline" OnValidSubmit="@AddTask">
    <DataAnnotationsValidator />
    <input class="form-control mx-2" type="text" @bind-value="task.TaskName">
    <button class="btn btn-outline-primary mx-2">Add Task</button>
        <ValidationSummary class="badge badge-secondary"/>
</EditForm>

<div class="progress-bar my-2 mx-1" role="progress-bar" style="width: @(PercentageCompleted)%" aria-valuemax="100" aria-valuemin="0">
    @(PercentageCompleted)%
</div>

<ul class="list-group my-2">
    @foreach (var taskItem in taskList)
    {
        if (taskItem.IsComplete)
        {
            <!--Task Completed-->
            <li class="list-group-item list-group-item-success mx-1" @onclick="(()=> taskItem.IsComplete = !taskItem.IsComplete)"><del>@taskItem.TaskName</del></li>
        }
        else
        {
            <!--Task Not Completed-->
            <li class="list-group-item list-group-item-dark mx-1" @onclick="(()=> taskItem.IsComplete = !taskItem.IsComplete)">@taskItem.TaskName</li>
        }
    }
</ul>

@code {
    //C# code

    protected List<TaskModel> taskList = new List<TaskModel>();

    protected TaskModel task = new TaskModel();

    protected override void OnInitialized()
    {
        if (HeaderName == "")
        {
            HeaderName = "ToDo";
        }
    }

    [Parameter]
    public string HeaderName { get; set; }

    private void AddTask()
    {
        taskList.Add(task);
        task = new TaskModel();
    }

    public int PercentageCompleted
    {
        get
        {
            return taskList.Count > 0 ? (taskList.Count(x=> x.IsComplete)*100/taskList.Count) : 0;
        }
    }

}
